---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: create-oci-container
spec:
  results:
    - name: oci-container
      description: The OCI container used to store all test artifacts.
  params:
    - name: test-name
      type: string
      description: The name of the test being executed.
    - name: oci-container
      type: string
      description: The ORAS container used to store all test artifacts. From this container will generate one with test tag.
    - name: oci-container-expiration
      type: string
      default: 1y
      description: Determine when a container will be deleted from quay.io.
  volumes:
    - name: konflux-test-infra-volume
      secret:
        secretName: konflux-test-infra
  steps:
    - name: create-oci-container
      image: quay.io/konflux-qe-incubator/konflux-qe-tools:latest
      volumeMounts:
        - name:  konflux-test-infra-volume
          mountPath: /usr/local/konflux-test-infra
      workingDir: /workspace
      script: |
        #!/bin/bash

        export OCI_STORAGE_USERNAME OCI_STORAGE_TOKEN OCI_STORAGE_CONTAINER TEMP_ANNOTATION_FILE

        # Export OCI storage credentials and container details
        OCI_STORAGE_USERNAME="$(jq -r '."quay-username"' /usr/local/konflux-test-infra/oci-storage)"
        OCI_STORAGE_TOKEN="$(jq -r '."quay-token"' /usr/local/konflux-test-infra/oci-storage)"
        OCI_STORAGE_CONTAINER="$(params.oci-container):$(params.test-name)"
        TEMP_ANNOTATION_FILE="$(mktemp)"

        # Log and save the container name
        echo "[INFO] OCI_STORAGE_CONTAINER: ${OCI_STORAGE_CONTAINER}"
        echo -n "${OCI_STORAGE_CONTAINER}" > "$(results.oci-container.path)"

        # Create the annotations file
        jq -n --arg exp "$(params.oci-container-expiration)" --arg title "Artifact store for pipelinerun: $(params.test-name)" \
          '{"$manifest": {"quay.expires-after": $exp, "org.opencontainers.image.title": $title}}' > "${TEMP_ANNOTATION_FILE}"

        # Push the container to oci registry
        oras push "${OCI_STORAGE_CONTAINER}" --username="${OCI_STORAGE_USERNAME}" --password="${OCI_STORAGE_TOKEN}" \
          --config /dev/null:application/vnd.oras.config.v1+json --annotation-file "${TEMP_ANNOTATION_FILE}"

        exit 1
