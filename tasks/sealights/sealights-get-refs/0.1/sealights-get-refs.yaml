---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: sealights-get-refs
spec:
  description: |
    The sealights-get-refs Task is responsible for retrieving metadata associated with Sealights
    instrumentation in a CI pipeline. This includes information about the Sealights Build Session ID,
    the source artifact type, the instrumented container image, and the build name.
    The Task fetches this metadata by parsing attestation information of the container image specified
    in the SNAPSHOT parameter using cosign.
  results:
    - name: sealights-source-artifact
      description: Indicates if the job is triggered by a Pull Request or a Push event.
    - name: sealights-bsid
      description: The pull request number if the job is triggered by a pull request event.
    - name: sealights-container-image
      description: The Git URL from which the test pipeline is originating. This can be from a fork or the original repository.
    - name: sealights-build-name
      description: The Git revision (commit SHA) from which the test pipeline is originating.
    - name: container-image
      description: The container image built from the specified Git revision without sealights instrumentation.
  params:
    - name: SNAPSHOT
      description: The JSON string of the Snapshot under test.
  steps:
    - name: sealights-get-refs
      image: quay.io/konflux-qe-incubator/konflux-qe-tools:latest
      env:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
        - name: KONFLUX_COMPONENT_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['appstudio.openshift.io/component']
      script: |
        #!/bin/bash
        set -euo pipefail
        COMPONENT_CONTAINER_IMAGE=$(jq -r --arg component_name "$KONFLUX_COMPONENT_NAME" '.components[] | select(.name == $component_name) | .containerImage' <<< "$SNAPSHOT")

        # Download and save cosign metadata to a temporary file
        cosign download attestation "${COMPONENT_CONTAINER_IMAGE}" > cosign_metadata.json
        SL_BSID="$(jq -r \
            '.payload | @base64d | fromjson | .predicate.buildConfig.tasks[] |
            select(.invocation.environment.labels."konflux-ci/sealights" == "true")
            | .results[] | select(.name == "sealights-bsid") | .value' \
            cosign_metadata.json)"

        SL_SOURCE_ARTIFACT="$(jq -r \
            '.payload | @base64d | fromjson | .predicate.buildConfig.tasks[] |
            select(.invocation.environment.labels."konflux-ci/sealights" == "true")
            | .results[] | select(.name == "source-artifact") | .value' \
            cosign_metadata.json)"

        SL_CONTAINER_IMAGE="$(jq -r \
            --arg sl_source_artifact "$SL_SOURCE_ARTIFACT" \
            '.payload | @base64d | fromjson | .predicate.buildConfig.tasks[] |
            select(.invocation.parameters."SOURCE_ARTIFACT" == $sl_source_artifact)
            | .results[] | select(.name == "IMAGE_REF") | .value' \
            cosign_metadata.json)"

        SL_BUILD_NAME="$(jq -r \
            '.payload | @base64d | fromjson | .predicate.buildConfig.tasks[] |
            select(.invocation.environment.labels."konflux-ci/sealights" == "true")
            | .results[] | select(.name == "sealights-build-name") | .value' \
            cosign_metadata.json)"

        # Log the derived environment variables
        echo "Sealights metadata:"
        echo "  Sealights Build Session Id: $SL_BSID"

        if [[ -n "$SL_SOURCE_ARTIFACT" || -n "$SL_CONTAINER_IMAGE" ]]; then
          [[ -n "$SL_SOURCE_ARTIFACT" ]] && echo "  Sealights Trusted Artifact: $SL_SOURCE_ARTIFACT"
          [[ -n "$SL_CONTAINER_IMAGE" ]] && echo "  Sealights Instrumented Container: $SL_CONTAINER_IMAGE"
        fi

        echo "  Sealights Build Name: $SL_BUILD_NAME"

        # Write each environment variable to its respective result file
        echo -n "$SL_SOURCE_ARTIFACT" > $(results.sealights-source-artifact.path)
        echo -n "$SL_BSID" > $(results.sealights-bsid.path)
        echo -n "$SL_CONTAINER_IMAGE" > $(results.sealights-container-image.path)
        echo -n "$SL_BUILD_NAME" > $(results.sealights-build-name.path)
        echo -n "$COMPONENT_CONTAINER_IMAGE" > $(results.container-image.path)
